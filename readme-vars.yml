---

# project information
project_name: emby
project_url: "https://emby.media/"
project_logo: "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/emby-logo.png"
project_lsio_github_repo_url: "https://github.com/linuxserver/docker-{{ project_name }}"
project_blurb: "[{{ project_name|capitalize }}]({{ project_url }}) organizes video, music, live TV, and photos from personal media libraries and streams them to smart TVs, streaming boxes and mobile devices. This container is packaged as a standalone emby Media Server."
# supported architectures
available_architectures:
  - {arch: "{{ arch_x86_64 }}", tag: "amd64-latest"}
  - {arch: "{{ arch_arm64 }}", tag: "arm64v8-latest"}
# development version
development_versions: true
development_versions_items:
  - {tag: "latest", desc: "Stable emby releases"}
  - {tag: "beta", desc: "Beta emby releases"}
# container parameters
common_param_env_vars_enabled: true #PGID, PUID, etc
param_container_name: "{{ project_name }}"
param_usage_include_vols: true
param_volumes:
  - {vol_path: "/config", vol_host_path: "/path/to/{{ project_name }}/library", desc: "Emby data storage location. *This can grow very large, 50gb+ is likely for a large collection.*"}
  - {vol_path: "/data/tvshows", vol_host_path: "/path/to/tvshows", desc: "Media goes here. Add as many as needed e.g. `/data/movies`, `/data/tv`, etc."}
  - {vol_path: "/data/movies", vol_host_path: "/path/to/movies", desc: "Media goes here. Add as many as needed e.g. `/data/movies`, `/data/tv`, etc."}
param_usage_include_ports: true
param_ports:
  - {external_port: "8096", internal_port: "8096", port_desc: "Http webUI."}
# optional container parameters
opt_param_usage_include_vols: true
opt_param_volumes:
  - {vol_path: "/opt/vc/lib", vol_host_path: "/opt/vc/lib", desc: "Path for Raspberry Pi OpenMAX libs *optional*."}
opt_param_device_map: true
opt_param_devices:
  - {device_path: "/dev/dri", device_host_path: "/dev/dri", desc: "Only needed if you want to use your Intel or AMD GPU for hardware accelerated video encoding (vaapi)."}
  - {device_path: "/dev/vchiq", device_host_path: "/dev/vchiq", desc: "Only needed if you want to use your Raspberry Pi OpenMax video encoding (Bellagio)."}
  - {device_path: "/dev/video10", device_host_path: "/dev/video10", desc: "Only needed if you want to use your Raspberry Pi V4L2 video encoding."}
  - {device_path: "/dev/video11", device_host_path: "/dev/video11", desc: "Only needed if you want to use your Raspberry Pi V4L2 video encoding."}
  - {device_path: "/dev/video12", device_host_path: "/dev/video12", desc: "Only needed if you want to use your Raspberry Pi V4L2 video encoding."}
opt_param_usage_include_ports: true
opt_param_ports:
  - {external_port: "8920", internal_port: "8920", port_desc: "Https webUI (you need to setup your own certificate)."}
unraid_template_sync: false
# application setup block
app_setup_block_enabled: true
app_setup_block: |
  Webui can be found at `http://<your-ip>:8096`

  Emby has very complete and verbose documentation located [here](https://github.com/MediaBrowser/Wiki/wiki) .

  ### Hardware Acceleration Enhancements

  This section lists the enhancements we have made for hardware acceleration in this image specifically.

  #### OpenMAX (Raspberry Pi)

  Hardware acceleration users for Raspberry Pi MMAL/OpenMAX will need to mount their `/dev/vcsm` and `/dev/vchiq` video devices inside of the container and their system OpenMax libs by passing the following options when running or creating the container:

  ```
  --device=/dev/vcsm:/dev/vcsm
  --device=/dev/vchiq:/dev/vchiq
  -v /opt/vc/lib:/opt/vc/lib
  ```

  #### V4L2 (Raspberry Pi)

  Hardware acceleration users for Raspberry Pi V4L2 will need to mount their `/dev/video1X` devices inside of the container by passing the following options when running or creating the container:

  ```
  --device=/dev/video10:/dev/video10
  --device=/dev/video11:/dev/video11
  --device=/dev/video12:/dev/video12
  ```
readme_hwaccel: true
# init diagram
init_diagram: |
  "emby:latest": {
    docker-mods
    base {
      fix-attr +\nlegacy cont-init
    }
    docker-mods -> base
    legacy-services
    custom services
    init-services -> legacy-services
    init-services -> custom services
    custom services -> legacy-services
    legacy-services -> ci-service-check
    init-migrations -> init-adduser
    init-os-end -> init-config
    init-config -> init-config-end
    init-crontab-config -> init-config-end
    init-video -> init-config-end
    init-config -> init-crontab-config
    init-mods-end -> init-custom-files
    init-config -> init-emby-config
    base -> init-envfile
    base -> init-migrations
    init-config-end -> init-mods
    init-mods-package-install -> init-mods-end
    init-mods -> init-mods-package-install
    init-adduser -> init-os-end
    init-envfile -> init-os-end
    init-custom-files -> init-services
    init-emby-config -> init-video
    init-services -> svc-cron
    svc-cron -> legacy-services
    init-services -> svc-emby
    svc-emby -> legacy-services
  }
  Base Images: {
    "baseimage-ubuntu:noble"
  }
  "emby:latest" <- Base Images
# changelog
changelogs:
  - {date: "13.08.24:", desc: "Rebase to Ubuntu Noble."}
  - {date: "12.02.24:", desc: "Use universal hardware acceleration blurb"}
  - {date: "19.01.24:", desc: "Fix tonemapping so it's done with hw acceleration."}
  - {date: "06.07.23:", desc: "Deprecate armhf. As announced [here](https://www.linuxserver.io/blog/a-farewell-to-arm-hf)"}
  - {date: "08.06.23:", desc: "Fix package extraction so it doesn't change /tmp perms."}
  - {date: "31.05.23:", desc: "Use upstream deb packages instead of rpm."}
  - {date: "26.09.22:", desc: "Update chown behavior."}
  - {date: "18.09.22:", desc: "Migrate to s6v3, rebase to Ubuntu Jammy."}
  - {date: "19.05.21:", desc: "Structural changes upstream."}
  - {date: "17.01.21:", desc: "Deprecate `UMASK_SET` in favor of UMASK in baseimage, see above for more information. Remove no longer used mapping for /transcode."}
  - {date: "21.12.20:", desc: "Rebase to Focal, see [here](https://docs.linuxserver.io/faq#my-host-is-incompatible-with-images-based-on-ubuntu-focal) for troubleshooting armhf."}
  - {date: "03.11.20:", desc: "Fix issue with missing samba folder."}
  - {date: "13.11.20:", desc: "Fix issue with samba and ffmpeg."}
  - {date: "03.07.20:", desc: "Add support for amd vaapi hw transcode."}
  - {date: "29.02.20:", desc: "Add v4l2 support on Raspberry Pi."}
  - {date: "26.02.20:", desc: "Add openmax support on Raspberry Pi."}
  - {date: "15.02.20:", desc: "Allow restarting emby from the gui (also allows for auto restarts after addon updates)."}
  - {date: "02.10.19:", desc: "Improve permission fixing for render and dvb devices."}
  - {date: "13.08.19:", desc: "Add umask environment variable."}
  - {date: "24.06.19:", desc: "Fix typos in readme."}
  - {date: "30.05.19:", desc: "Initial release."}
